name: Synth CDK and run iam-access-analyzer custom policy checks

on:
  pull_request:
    types: [opened, review_requested]
  push:
    branches:
      - 'cdk-v2'

permissions:
  id-token: write
  contents: read
  issues: write
  
env:
  AWS_OIDC_ROLE_ARN: ${{ secrets.OIDC_IAM_ROLE }}
  AWS_REGION: ap-northeast-1

jobs:     
  synth_cdk:
    name: CDK synth
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
     CFnFileNames: ${{ steps.create-matrix.outputs.files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set using var
        id: set-var
        run: |
          ROLE=${{ env.AWS_OIDC_ROLE_ARN }}
          SYNTH_CMD="npx cdk synth"
          echo "synth_role=$ROLE" >> $GITHUB_OUTPUT
          echo "synth_cmd=$SYNTH_CMD" >> $GITHUB_OUTPUT

      - name: Assume Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.set-var.outputs.synth_role }}
          aws-region: ${{env.AWS_REGION}}
          role-session-name: GitHubSessionName

      - name: Install dependencies
        run: npm install

      - name: CDK Synth
        run: |
          ${{ steps.set-var.outputs.synth_cmd }}

      - name: create matrix
        id: create-matrix
        run: |
          echo "files=$(ls cdk.out | grep .template.json | jq -R . | jq -s -c .)" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@master
        with:
          name: cdk.out
          path: cdk.out

  run_iam_access_analyzer:
    name: run iam access analyzer custom policy checks
    needs: synth_cdk
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3      
      matrix:
        file: ${{fromJson(needs.synth_cdk.outputs.CFnFileNames)}}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set using var
        id: set-var
        run: |
          ROLE=${{ env.AWS_OIDC_ROLE_ARN }}
          SYNTH_CMD="npx cdk synth"
          echo "synth_role=$ROLE" >> $GITHUB_OUTPUT
          echo "synth_cmd=$SYNTH_CMD" >> $GITHUB_OUTPUT

      - name: Assume Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.set-var.outputs.synth_role }}
          aws-region: ${{env.AWS_REGION}}
          role-session-name: GitHubSessionName

      - uses: actions/download-artifact@master
        with:
          name: cdk.out
          path: cdk.out

      - name: Run AWS AccessAnalyzer CheckNoNewAccess check
        id: run-aws-check-no-new-access
        uses: aws-actions/cloudformation-aws-iam-policy-validator@v1.0.1
        with:
          policy-check-type: 'CHECK_NO_NEW_ACCESS'
          template-path: ${{ format('cdk.out/{0}', matrix.file) }}
          reference-policy: 'reference-files/reference.json'
          reference-policy-type: "IDENTITY"
          region: ${{env.AWS_REGION}}
        
